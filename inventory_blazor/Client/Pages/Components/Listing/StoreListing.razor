@using inventory_blazor.Shared.Models
@inject HttpClient HttpClient

<div class="min-h-screen flex justify-center items-center">
    <div class="p-8 rounded-lg shadow-lg flex flex-col justify-center items-center">
        <h1 class="text-5xl text-white mb-8">Add Store</h1>
        <form @onsubmit="AddStore" class="space-y-4 w-full max-w-md">
            <div>
                <label for="sname" class="text-white mb-2">Enter new Store name here:</label>
                <input type="text" id="sname" @bind="newStore.Sname" placeholder="Enter Store Name"
                    class="mt-3 px-3 py-2 bg-[#41444d] text-white rounded-lg w-full outline-none" />
            </div>
            <div>
                <label for="saddress" class="text-white mb-2">Enter Store Address here:</label>
                <input type="text" id="saddress" @bind="newStore.Address"
                    placeholder="Enter Store Address"
                    class="mt-3 px-3 py-2 bg-[#41444d] text-white rounded-lg w-full outline-none" />
            </div>
            <div>
                <label for="mobno" class="text-white mb-2">Enter Store Phone Number here:</label>
                <input type="text" id="mobno" @bind="newStore.Mobno"
                 placeholder="Enter Store Pno"
                    class="mt-3 px-3 py-2 bg-[#41444d] text-white rounded-lg w-full outline-none" />
            </div>
            <button type="submit" class="bg-[#33e67a] hover:bg-[#30995a] text-black font-bold py-2 px-4 rounded w-full">
                Submit
            </button>
        </form>
        <div class="w-full">
            <div
                class="w-full mx-auto  rounded-lg bg-[#2f2f37] text-[#adadad] flex text-center mt-12 items-center shadow-lg py-3">
                <h5 class="w-1/4">Store ID</h5>
                <h5 class="w-1/4">Store Name</h5>
                <h5 class="w-1/4">Store Address</h5>
                <h5 class="w-1/4">Store Phone Number</h5>
                <h5 class="w-1/4">Action</h5>
            </div>

            @if (stores != null && stores.Any())
            {
                @foreach (var store in stores)
                {
                    <div class="w-full">
                        <div
                            class="w-full mx-auto rounded-lg bg-[#1e1f23] text-[#adadad] flex mt-4 text-center h-16 items-center shadow-lg hover:contrast-125 transition ease-in-out duration-300 cursor-pointer text-sm">
                            <h5 class="w-1/4">@store.Sid</h5>
                            <h5 class="w-1/4">@store.Sname</h5>
                            <h5 class="w-1/4">@store.Address</h5>
                            <h5 class="w-1/4">@store.Mobno</h5>
                            <div class="w-1/4 flex justify-center items-center gap-2">
                                <form action="/edit/@store.Sid" method="get">
                                    <button class="bg-[#33E67A] font-bold rounded-lg text-black px-2 text-xs py-1">
                                        Edit
                                    </button>
                                </form>
                                <form action="/delete/@store.Sid" method="post">
                                    <button class="bg-[#33E67A] font-bold rounded-lg text-black px-2 text-xs py-1">
                                        Delete
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>


@code {
    private List<Store>? stores;
    private Store newStore = new Store();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            stores = await HttpClient.GetFromJsonAsync<List<Store>>("api/Store");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving stores: {ex.Message}");
        }
    }

    private async Task AddStore()
    {
        try
        {
            await HttpClient.PostAsJsonAsync("api/Store", newStore);
            newStore = new Store();
            stores = await HttpClient.GetFromJsonAsync<List<Store>>("api/Store");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding store: {ex.Message}");
        }
    }
}
