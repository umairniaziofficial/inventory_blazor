@page "/edit-category/{id}"
@using inventory_blazor.Shared.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="min-h-screen flex justify-center items-center">
    <div class="w-[90%] h-[90%] p-8 rounded-lg shadow-lg flex flex-col justify-center items-center">
        <h1 class="text-5xl text-white mb-8">Edit Category</h1>
        <form @onsubmit="UpdateCategory" class="space-y-4 w-full max-w-md">
            <div>
                <label for="cid" class="text-white">Category ID:</label>
                <input type="text" id="cid" name="cid" readonly class="mt-1 px-3 py-2 bg-[#41444d] text-white rounded-lg w-full outline-none" @bind="editedCategory.Cid" />
            </div>
            <div>
                <label for="categoryName" class="text-white">Category Name:</label>
                <input type="text" id="categoryName" name="categoryName" required class="mt-1 px-3 py-2 bg-[#41444d] text-white rounded-lg w-full outline-none" @bind="editedCategory.Category_name" />
            </div>
            <button type="submit" class="bg-[#33e67a] hover:bg-[#30995a] text-black font-bold py-2 px-4 rounded w-full">
                Update
            </button>
        </form>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private Category editedCategory = new Category();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            int categoryId = int.Parse(Id);
            editedCategory = await HttpClient.GetFromJsonAsync<Category>($"api/Category/{categoryId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving category: {ex.Message}");
        }
    }

    private async Task UpdateCategory()
    {
        try
        {
            var response = await HttpClient.PutAsJsonAsync("api/Category", editedCategory);
            if (!response.IsSuccessStatusCode)
            {
                Console.WriteLine($"HTTP request failed with status code: {response.StatusCode}");
                return;
            }

            NavigationManager.NavigateTo("/category");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating category: {ex.Message}");
        }
    }
}
